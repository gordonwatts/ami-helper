[project.optional-dependencies]
test = ["pytest>=7.0.0", "pytest-mock>=3.10.0"]
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ami-helper"
dynamic = ["version"]
description = 'Commansd to help with MCP and data access with AMI in ATLAS'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [{ name = "Gordon Watts", email = "gwatts@uw.edu" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "typer>=0.9.0",
  "pypika>0.48.8",
  "diskcache>=5.6.0",
  "rich>=13.0.0",
  "rucio",
  "pyami-core",
  # "pyami-atlas",
]

[project.urls]
Documentation = "https://github.com/Gordon Watts/ami-helper#readme"
Issues = "https://github.com/Gordon Watts/ami-helper/issues"
Source = "https://github.com/Gordon Watts/ami-helper"

[project.scripts]
ami-helper = "ami_helper.__main__:app"

[tool.hatch.version]
path = "src/ami_helper/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = ["mypy>=1.0.0"]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/ami_helper tests}"

[tool.coverage.run]
source_pkgs = ["ami_helper", "tests"]
branch = true
parallel = true
omit = ["src/ami_helper/__about__.py"]

[tool.coverage.paths]
ami_helper = ["src/ami_helper", "*/ami-helper/src/ami_helper"]
tests = ["tests", "*/ami-helper/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
